openapi: 3.0.0
info:
  title: Product Catalog API
  description: A REST API for managing product catalog with CRUD operations
  version: 1.0.0
servers:
  - url: http://localhost:7000
    description: Development server
paths:
  /api/products/all-products:
    get:
      summary: Get all products
      description: Returns a list of all products in the catalog
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  count:
                    type: integer
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Product'
        '500':
          description: Internal server error

  /api/products/create-product:
    post:
      summary: Create a new product
      description: Add a new product to the catalog
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductInput'
      responses:
        '201':
          description: Product created successfully
        '400':
          description: Invalid input
        '500':
          description: Internal server error

  /api/products/search:
    get:
      summary: Search products
      description: Search products by various criteria
      parameters:
        - name: query
          in: query
          description: Search query for product name or description
          required: false
          schema:
            type: string
        - name: category
          in: query
          description: Filter by category
          required: false
          schema:
            type: string
        - name: minPrice
          in: query
          description: Minimum price filter
          required: false
          schema:
            type: number
        - name: maxPrice
          in: query
          description: Maximum price filter
          required: false
          schema:
            type: number
        - name: inStock
          in: query
          description: Filter by stock availability (true/false)
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  count:
                    type: integer
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Product'
        '500':
          description: Internal server error

  /api/products/{id}:
    get:
      summary: Get product by ID
      description: Returns a single product by its ID
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the product to return
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/Product'
        '404':
          description: Product not found
        '500':
          description: Internal server error

    put:
      summary: Update a product
      description: Update an existing product by ID
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the product to update
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductInput'
      responses:
        '200':
          description: Product updated successfully
        '400':
          description: Invalid input
        '404':
          description: Product not found
        '500':
          description: Internal server error

    delete:
      summary: Delete a product
      description: Delete a product by ID
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the product to delete
          schema:
            type: integer
      responses:
        '200':
          description: Product deleted successfully
        '404':
          description: Product not found
        '500':
          description: Internal server error

components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: integer
          description: The auto-generated ID of the product
        name:
          type: string
          description: The name of the product
        price:
          type: number
          format: float
          description: The price of the product
        stock:
          type: integer
          description: The stock quantity of the product
        description:
          type: string
          description: The description of the product
        category:
          type: string
          description: The category of the product
        createdAt:
          type: string
          format: date-time
          description: The creation timestamp
        updatedAt:
          type: string
          format: date-time
          description: The last update timestamp
      example:
        id: 1
        name: Wireless Headphones
        price: 199.99
        stock: 50
        description: High-quality wireless headphones with noise cancellation
        category: Electronics
        createdAt: 2023-10-05T12:00:00.000Z
        updatedAt: 2023-10-05T12:00:00.000Z

    ProductInput:
      type: object
      required:
        - name
        - price
      properties:
        name:
          type: string
          description: The name of the product
        price:
          type: number
          format: float
          description: The price of the product
        stock:
          type: integer
          description: The stock quantity of the product
        description:
          type: string
          description: The description of the product
        category:
          type: string
          description: The category of the product
      example:
        name: Wireless Headphones
        price: 199.99
        stock: 50
        description: High-quality wireless headphones with noise cancellation
        category: Electronics
